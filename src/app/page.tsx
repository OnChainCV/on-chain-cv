'use client';

import { useState, useEffect } from 'react';

const AnimatedText = ({ text, className, startDelay }) => {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const timeoutId = setTimeout(() => {
      setIsVisible(true);
    }, startDelay);
    return () => clearTimeout(timeoutId);
  }, [startDelay]);

  const lines = text.split('<br />');

  return (
    <div className={className}>
      {lines.map((line, index) => (
        <p
          key={index}
          className={`opacity-0 ${isVisible ? 'animate-fade-in' : ''} transition-opacity duration-1000`}
          style={{ transitionDelay: `${startDelay + index * 200}ms` }}
        >
          {line}
        </p>
      ))}
    </div>
  );
};

const AnimatedCard = ({ children, delay, animationStart }) => {
  const [isVisible, setIsVisible] = useState(false);

  useEffect(() => {
    const timeoutId = setTimeout(() => {
      setIsVisible(true);
    }, animationStart + 500 + delay * 150);

    return () => clearTimeout(timeoutId);
  }, [animationStart, delay]);

  return (
    <div
      className={`opacity-0 translate-y-5 scale-95 transition-all duration-800 ${
        isVisible ? 'opacity-100 translate-y-0 scale-100 animate-whirlwind-in' : ''
      } p-6 rounded-lg bg-gray-800 bg-opacity-50 hover:scale-105 hover:bg-gray-700 cursor-pointer`}
      style={{ transitionDelay: `${delay * 150}ms` }}
    >
      {children}
    </div>
  );
};

export default function Home() {
  const text1 = "–í—ñ–¥–∫—Ä–∏–π —Å–≤—ñ–π Web3-–ü—Ä–æ—Ñ—ñ–ª—å:<br />–†–µ–ø—É—Ç–∞—Ü—ñ—è, –í–ª–∞—Å–Ω—ñ—Å—Ç—å, –í–ø–ª–∏–≤.";
  const text2 = "–°—Ç–≤–æ—Ä–∏ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—É Web3 –≤—ñ–∑–∏—Ç—ñ–≤–∫—É –Ω–∞ –±–∞–∑—ñ Solana.<br />–ü—ñ–¥—Ç–≤–µ—Ä–¥–∂—É–π —Å–≤–æ—ó –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è NFT, –¥–µ–º–æ–Ω—Å—Ç—Ä—É–π —Ä–µ–ø—É—Ç–∞—Ü—ñ—é –≤ DAO<br />—Ç–∞ –≤–æ–ª–æ–¥—ñ–π —Å–≤–æ—ó–º–∏ –¥–∞–Ω–∏–º–∏ —É –±–ª–æ–∫—á–µ–π–Ω—ñ.";
  const animationStartTitle = 500;
  const animationStartSubtitle = animationStartTitle + 1200; 
  const animationStartCards = animationStartSubtitle + 1200; 

  return (
    <div className="flex flex-col justify-center items-center min-h-screen bg-gradient-to-br from-[#0f0c29] via-[#302b63] to-[#24243e] text-white px-4">
      <div className="max-w-3xl text-center">
        <h1 className="text-4xl md:text-5xl font-extrabold leading-tight mb-8">
          <AnimatedText text={text1} className="leading-tight" startDelay={animationStartTitle} />
        </h1>
        <div className="mb-10 text-lg md:text-xl text-gray-300">
          <AnimatedText text={text2} className="leading-tight" startDelay={animationStartSubtitle} />
        </div>

        <div className="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-8 mt-8">
          <AnimatedCard delay={0} animationStart={animationStartCards}>
            <h3 className="font-semibold text-white mb-2">üîó –ë–ª–æ–∫—á–µ–π–Ω-–≤–ª–∞—Å–Ω—ñ—Å—Ç—å</h3>
            <p className="text-sm text-left text-gray-400">–ö–æ–Ω—Ç—Ä–æ–ª—é–π —Å–≤—ñ–π –ø—Ä–æ—Ñ—ñ–ª—å. –ó–±–µ—Ä—ñ–≥–∞–π —Å–≤–æ—ó –¥–æ—Å—è–≥–Ω–µ–Ω–Ω—è —è–∫ —É–Ω—ñ–∫–∞–ª—å–Ω—ñ NFT.</p>
          </AnimatedCard>
          <AnimatedCard delay={1} animationStart={animationStartCards}>
            <h3 className="font-semibold text-white mb-2">üåê –†–µ–ø—É—Ç–∞—Ü—ñ—è Web3</h3>
            <p className="text-sm text-left text-gray-400">–¢–≤–æ—è —É—á–∞—Å—Ç—å —É DAO —Ç–∞ Web3 –ø—Ä–æ—î–∫—Ç–∞—Ö —Ñ–æ—Ä–º—É—î —Ç–≤–æ—é —Ä–µ–ø—É—Ç–∞—Ü—ñ—é.</p>
          </AnimatedCard>
          <AnimatedCard delay={2} animationStart={animationStartCards}>
            <h3 className="font-semibold text-white mb-2">‚ö° –®–≤–∏–¥–∫—ñ—Å—Ç—å Solana</h3>
            <p className="text-sm text-left text-gray-400">–ú–∏—Ç—Ç—î–≤–µ –ø—ñ–¥–∫–ª—é—á–µ–Ω–Ω—è —Ç–∞ –∑–∞–≤–∞–Ω—Ç–∞–∂–µ–Ω–Ω—è —ñ–∑ –µ–∫–æ—Å–∏—Å—Ç–µ–º–∏ Solana.</p>
          </AnimatedCard>
        </div>
      </div>
    </div>
  );
}